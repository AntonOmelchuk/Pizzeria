{"version":3,"sources":["Styles/globalStyle.js","Styles/colors.js","Styles/title.js","Components/Navbar/navbar.style.js","Components/Navbar/Navbar.jsx","Components/Banner/banner.style.js","Components/Banner/Banner.jsx","Components/Menu/menu.style.js","Components/Menu/dataFood.js","Components/Menu/foodGrid.js","Components/Menu/Menu.jsx","Styles/customButton.js","Components/FoodDialog/foodDialog.style.js","Components/QuantityInput/quantityInput.style.js","Components/QuantityInput/QuantityInput.jsx","Hooks/useQuantity.js","Components/Toppings/toppings.style.js","Components/Toppings/Toppings.jsx","Hooks/useToppings.js","Components/DrinksChoice/DrinksChoice.jsx","Components/FoodDialog/FoodDialog.jsx","Hooks/useChoice.js","Components/Order/order.style.js","Components/Order/Order.jsx","Hooks/useOpenFood.js","Hooks/useOrder.js","Hooks/useTitle.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","pizzaRed","Title","styled","div","NavbarContainer","Logo","Navbar","role","aria-label","BannerContainer","Banner","MenuContainer","formatPrice","price","toLocaleString","style","currency","foods","id","name","img","section","choices","reduce","res","food","push","FoodGrid","FoodLabel","FoodItem","Menu","setOpenFood","Object","entries","map","index","Fragment","key","onClick","CustomButton","disabled","DialogContainer","DialogBanner","DialogBannerLabel","DialogContent","DialogFooter","ConfirmButton","DialogOverlay","QuantityInputContainer","QuantityInputItem","input","IncrementButton","QuantityInput","quantity","value","setValue","maxLength","useQuantity","useState","onChange","e","target","ToppingsContainer","ToppingCheckbox","CheckboxLabel","label","Toppings","toppings","checkTopping","topping","type","checked","toppingsList","getDefaultToppings","DrinksChoice","openFood","choiceDrink","choice","htmlFor","getTotalPrice","order","toppingsTotalPrice","filter","t","length","FoodDialogContainer","orders","setOrders","defaultTopping","setToppings","newToppings","useToppings","defaultChoice","setChoice","useChoice","isEdit","checkSection","closeFoodDialog","newOrders","FoodDialog","props","OrderContainer","OrderContent","OrderItemContainer","editable","OrderItem","CheckoutButton","OrderFooter","Order","React","memo","total","stopPropagation","newOrder","_","i","deleteOrder","cursor","join","useOpenFood","useOrder","useTitle","useEffect","document","title","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b2abfed.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n      margin: 0;\n      font-family: 'Open Sans', sans-serif;\n    }\n    \n    h1, h2, h3 {\n      font-family: 'Righteous', cursive;\n    }\n    \n    input,\n    label {\n      cursor: pointer;\n    }\n`;\n","export const pizzaRed = 'rgb(244,67,54)';\n","import styled from 'styled-components';\n\nexport const Title = styled.div`\n  font-family: Righteous, cursive;\n`;\n","import styled from 'styled-components';\nimport {pizzaRed} from '../../Styles/colors';\nimport {Title} from '../../Styles/title';\n\nexport const NavbarContainer = styled.div`\n  background-color: ${pizzaRed};\n  padding: 10px;\n  position: fixed;\n  width: 100%;\n  z-index: 999;\n`;\nexport const Logo = styled(Title)`\n  font-size: 20px;\n  color: white;\n  position: relative;\n  text-shadow: 1px 1px 4px #380502;\n`;\n","import React from 'react';\nimport {Logo, NavbarContainer} from './navbar.style';\n\nconst Navbar = () => {\n  return (\n    <NavbarContainer>\n      <Logo>\n        RockItPizza{' '}\n        <span role='img' aria-label='pizza slice'>\n          🍕\n        </span>\n      </Logo>\n    </NavbarContainer>\n  );\n};\n\nexport default Navbar;\n","import styled from 'styled-components';\r\n\r\nexport const BannerContainer = styled.div`\r\n  height: 200px;\r\n  background-image: url('img/banner.jpg');\r\n  background-position: center;\r\n  background-size: cover;\r\n  filter: contrast(75%);\r\n`;\r\n","import React from 'react';\r\nimport {BannerContainer} from './banner.style';\r\n\r\nconst Banner = () => {\r\n  return <BannerContainer />;\r\n};\r\n\r\nexport default Banner;\r\n","import styled from 'styled-components';\r\n\r\nexport const MenuContainer = styled.div`\r\n  height: 1000px;\r\n  margin: 0 400px 50px 20px;\r\n`;\r\n","export const formatPrice = price => {\r\n  return price.toLocaleString('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  });\r\n};\r\n\r\nconst foodItems = [\r\n  {\r\n    id: 1,\r\n    name: 'Cheese Pizza',\r\n    img: '/img/pizza.png',\r\n    section: 'Pizza',\r\n    price: 10,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Pepperoni Pizza',\r\n    img: '/img/pizza2.jpeg',\r\n    section: 'Pizza',\r\n    price: 15,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chicken Pizza',\r\n    img: '/img/chicken-pizza.jpeg',\r\n    section: 'Pizza',\r\n    price: 20,\r\n  },\r\n  {\r\n    id: 4,\r\n    img: '/img/healthy-pizza.jpeg',\r\n    name: 'Veggie Pizza',\r\n    section: 'Pizza',\r\n    price: 20,\r\n  },\r\n  {\r\n    id: 5,\r\n    img: '/img/burger.jpeg',\r\n    name: 'Burger',\r\n    section: 'Sandwich',\r\n    price: 3,\r\n  },\r\n  {\r\n    id: 6,\r\n    img: '/img/gyro.jpeg',\r\n    name: 'Gyro',\r\n    section: 'Sandwich',\r\n    price: 4.5,\r\n  },\r\n  {\r\n    id: 7,\r\n    img: '/img/sandwich.jpeg',\r\n    name: 'Shrimp PoBoy',\r\n    section: 'Sandwich',\r\n    price: 6,\r\n  },\r\n  {\r\n    id: 8,\r\n    img: '/img/fries.jpeg',\r\n    name: 'Fries',\r\n    section: 'Sides',\r\n    price: 1,\r\n  },\r\n  {\r\n    id: 9,\r\n    img: '/img/chicken-fingers.jpeg',\r\n    name: 'Chicken Fingers',\r\n    section: 'Sides',\r\n    price: 4,\r\n  },\r\n  {\r\n    id: 10,\r\n    img: '/img/drinks.jpg',\r\n    price: 1,\r\n    name: 'Drinks',\r\n    section: 'Drinks',\r\n    choices: ['Coca-Cola', 'Fanta', 'Sprite'],\r\n  },\r\n];\r\n\r\nexport const foods = foodItems.reduce((res, food) => {\r\n  if (!res[food.section]) {\r\n    res[food.section] = [];\r\n  }\r\n  res[food.section].push(food);\r\n  return res;\r\n}, {});\r\n","import styled from 'styled-components';\r\nimport {Title} from '../../Styles/title';\r\n\r\nexport const FoodGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n`;\r\n\r\nexport const FoodLabel = styled(Title)`\r\n  position: absolute;\r\n  background-color: rgba(255, 255, 255, 0.82);\r\n  padding: 5px;\r\n  border-radius: 9px;\r\n`;\r\n\r\nexport const FoodItem = styled.div`\r\n  height: 153px;\r\n  padding: 10px;\r\n  margin: 5px 0 0 0;\r\n\r\n  font-size: 21px;\r\n\r\n  background-image: ${({img}) => `url(${img})`};\r\n  background-position: center;\r\n  background-size: cover;\r\n  border-radius: 9px;\r\n  box-shadow: 0 0 2px 0 grey;\r\n  filter: contrast(75%);\r\n\r\n  transition: box-shadow 0.1s, margin 0.1s, filter 0.1s;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    filter: contrast(100%);\r\n    box-shadow: 0 5px 12px 0 grey;\r\n    margin: 0 0 5px 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {MenuContainer} from './menu.style';\r\nimport {foods, formatPrice} from './dataFood';\r\nimport {FoodItem, FoodGrid, FoodLabel} from './foodGrid';\r\n\r\nconst Menu = ({setOpenFood}) => {\r\n  return (\r\n    <MenuContainer>\r\n      {Object.entries(foods).map(([section, foods], index) => (\r\n        <React.Fragment key={index}>\r\n          <h1>{section}</h1>\r\n          <FoodGrid>\r\n            {foods.map(food => (\r\n              <FoodItem\r\n                img={food.img}\r\n                key={food.id}\r\n                onClick={() => setOpenFood(food)}\r\n              >\r\n                <FoodLabel>\r\n                  <div>{food.name}</div>\r\n                  <div>{formatPrice(food.price)}</div>\r\n                </FoodLabel>\r\n              </FoodItem>\r\n            ))}\r\n          </FoodGrid>\r\n        </React.Fragment>\r\n      ))}\r\n    </MenuContainer>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import styled from 'styled-components';\r\nimport {Title} from './title';\r\nimport {pizzaRed} from './colors';\r\n\r\nexport const CustomButton = styled(Title)`\r\n  margin: 10px;\r\n  padding: 10px;\r\n  width: 200px;\r\n  height: 20px;\r\n  border-radius: 5px;\r\n  background-color: ${pizzaRed};\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  ${({disabled}) =>\r\n    disabled &&\r\n    `\r\n    opactity: .5; \r\n    background-color: grey; \r\n    pointer-events: none; \r\n  `}\r\n`;\r\n","import styled from 'styled-components';\r\nimport {FoodLabel} from '../Menu/foodGrid';\r\nimport {CustomButton} from '../../Styles/customButton';\r\n\r\nexport const DialogContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 500px;\r\n  max-height: calc(100% - 100px);\r\n  position: fixed;\r\n  top: 75px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 21;\r\n\r\n  background-color: white;\r\n  border-radius: 12px;\r\n`;\r\n\r\nexport const DialogBanner = styled.div`\r\n  min-height: 200px;\r\n  margin-bottom: 20px;\r\n  ${({img}) => `background-image: url(${img})`};\r\n  background-position: center;\r\n  background-size: cover;\r\n  border-radius: 12px 12px 0 0;\r\n`;\r\n\r\nexport const DialogBannerLabel = styled(FoodLabel)`\r\n  top: 100px;\r\n  font-size: 30px;\r\n  padding: 5px 40px;\r\n`;\r\n\r\nexport const DialogContent = styled.div`\r\n  min-height: 100px;\r\n  padding: 0 40px 80px;\r\n  overflow: auto;\r\n`;\r\n\r\nexport const DialogFooter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 60px;\r\n  box-shadow: 0 -4px 6px 0 grey;\r\n`;\r\n\r\nexport const ConfirmButton = styled(CustomButton)``;\r\n\r\nexport const DialogOverlay = styled.div`\r\n  position: fixed;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  z-index: 12;\r\n\r\n  background-color: black;\r\n  opacity: 0.72;\r\n`;\r\n","import styled from 'styled-components';\r\nimport {Title} from '../../Styles/title';\r\nimport {pizzaRed} from '../../Styles/colors';\r\n\r\nexport const QuantityInputContainer = styled(Title)`\r\n  display: flex;\r\n  height: 24px;\r\n`;\r\n\r\nexport const QuantityInputItem = styled.input`\r\n  font-size: 18px;\r\n  width: 24px;\r\n  text-align: center;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nexport const IncrementButton = styled.div`\r\n  width: 23px;\r\n  color: ${pizzaRed};\r\n  font-size: 20px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  line-height: 23px;\r\n  margin: 0px 10px;\r\n  border: 1px solid ${pizzaRed};\r\n  ${({disabled}) =>\r\n    disabled &&\r\n    `opacity: 0.5; \r\n     pointer-events: none; \r\n     `}\r\n  &:hover {\r\n    background-color: #ffe3e3;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  IncrementButton,\r\n  QuantityInputContainer,\r\n  QuantityInputItem,\r\n} from './quantityInput.style';\r\n\r\nconst QuantityInput = ({quantity}) => {\r\n  const {value, setValue} = quantity;\r\n\r\n  return (\r\n    <QuantityInputContainer>\r\n      <div>Quantity: </div>\r\n      <IncrementButton\r\n        disabled={value <= 1}\r\n        onClick={() => setValue(value - 1)}\r\n      >\r\n        {' '}\r\n        -{' '}\r\n      </IncrementButton>\r\n      <QuantityInputItem {...quantity} maxLength='2' />\r\n      <IncrementButton\r\n        disabled={value >= 99}\r\n        onClick={() => setValue(value + 1)}\r\n      >\r\n        {' '}\r\n        +{' '}\r\n      </IncrementButton>\r\n    </QuantityInputContainer>\r\n  );\r\n};\r\n\r\nexport default QuantityInput;\r\n","import {useState} from 'react';\r\n\r\nconst useQuantity = () => {\r\n  const [value, setValue] = useState(1);\r\n\r\n  const onChange = e => {\r\n    if (!(+e.target.value >= 0)) {\r\n      setValue(1);\r\n      return;\r\n    }\r\n\r\n    setValue(+e.target.value);\r\n  };\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    onChange,\r\n  };\r\n};\r\n\r\nexport default useQuantity;\r\n","import styled from 'styled-components';\r\n\r\nexport const ToppingsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n`;\r\n\r\nexport const ToppingCheckbox = styled.input`\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CheckboxLabel = styled.label`\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  CheckboxLabel,\r\n  ToppingCheckbox,\r\n  ToppingsContainer,\r\n} from './toppings.style';\r\n\r\nconst Toppings = ({toppings, checkTopping}) => {\r\n  return (\r\n    <ToppingsContainer>\r\n      {toppings.map(topping => (\r\n        <CheckboxLabel key={topping.id}>\r\n          <ToppingCheckbox\r\n            type='checkbox'\r\n            checked={topping.checked}\r\n            onChange={() => checkTopping(topping.id)}\r\n          />\r\n          {topping.name}\r\n        </CheckboxLabel>\r\n      ))}\r\n    </ToppingsContainer>\r\n  );\r\n};\r\n\r\nexport default Toppings;\r\n","import {useState} from 'react';\r\n\r\nexport const useToppings = defaultTopping => {\r\n  const [toppings, setToppings] = useState(\r\n    defaultTopping || getDefaultToppings()\r\n  );\r\n\r\n  const checkTopping = id => {\r\n    const newToppings = [...toppings];\r\n    newToppings[id].checked = !newToppings[id].checked;\r\n    setToppings(newToppings);\r\n  };\r\n\r\n  return {\r\n    toppings,\r\n    setToppings,\r\n    checkTopping,\r\n  };\r\n};\r\n\r\nconst toppingsList = [\r\n  'Extra Cheese',\r\n  'Pepperoni',\r\n  'Sausage',\r\n  'Onions',\r\n  'Peppers',\r\n  'Pineapple',\r\n  'Ham',\r\n  'Spinach',\r\n  'Artichokes',\r\n  'Mushrooms',\r\n  'Anchovies',\r\n];\r\n\r\nconst getDefaultToppings = () => {\r\n  return toppingsList.map((topping, index) => ({\r\n    id: index,\r\n    name: topping,\r\n    checked: false,\r\n  }));\r\n};\r\n","import React from 'react';\r\n\r\nconst DrinksChoice = ({openFood, choiceDrink}) => {\r\n  return (\r\n    <>\r\n      <h3>Choose one</h3>\r\n      {openFood.choices.map(choice => (\r\n        <React.Fragment key={choice}>\r\n          <input\r\n            type='radio'\r\n            id={choice}\r\n            name='choice'\r\n            value={choice}\r\n            checked={choiceDrink.choice === choice}\r\n            onChange={choiceDrink.onChange}\r\n          />\r\n          <label htmlFor={choice}>{choice} </label>\r\n        </React.Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DrinksChoice;\r\n","import React from 'react';\nimport {\n  ConfirmButton,\n  DialogBanner,\n  DialogBannerLabel,\n  DialogContainer,\n  DialogContent,\n  DialogFooter,\n  DialogOverlay,\n} from './foodDialog.style';\nimport {formatPrice} from '../Menu/dataFood';\nimport QuantityInput from '../QuantityInput/QuantityInput';\nimport useQuantity from '../../Hooks/useQuantity';\nimport Toppings from '../Toppings/Toppings';\nimport {useToppings} from '../../Hooks/useToppings';\nimport {useChoice} from '../../Hooks/useChoice';\nimport DrinksChoice from '../DrinksChoice/DrinksChoice';\n\nexport const getTotalPrice = order => {\n  const toppingsPrice = 0.5;\n  const toppingsTotalPrice =\n    order.toppings.filter(t => t.checked).length * toppingsPrice;\n  return order.quantity * (order.price + toppingsTotalPrice);\n};\n\nconst FoodDialogContainer = ({openFood, setOpenFood, orders, setOrders}) => {\n  const quantity = useQuantity(openFood && openFood.quantity);\n  const toppings = useToppings(openFood.toppings);\n  const choiceDrink = useChoice(openFood.choice);\n\n  const isEdit = openFood.index > -1;\n\n  const checkSection = section => section === openFood.section;\n\n  const order = {\n    ...openFood,\n    quantity: quantity.value,\n    toppings: toppings.toppings,\n    choice: choiceDrink.choice,\n  };\n\n  const closeFoodDialog = () => setOpenFood();\n\n  const editOrder = () => {\n    const newOrders = [...orders];\n    newOrders[openFood.index] = order;\n    setOrders(newOrders);\n    closeFoodDialog();\n  };\n\n  const onHandleClick = () => {\n    setOrders([...orders, order]);\n    closeFoodDialog();\n  };\n\n  return (\n    <>\n      <DialogOverlay onClick={() => setOpenFood()} />\n      <DialogContainer>\n        <DialogBanner img={openFood.img}>\n          <DialogBannerLabel>{openFood.name}</DialogBannerLabel>\n        </DialogBanner>\n        <DialogContent>\n          <QuantityInput quantity={quantity} />\n          {checkSection('Pizza') && (\n            <>\n              <h3>Would you like toppings? (Any for {formatPrice(0.5)})</h3>\n              <Toppings {...toppings} />\n            </>\n          )}\n          {checkSection('Drinks') && (\n            <>\n              <DrinksChoice openFood={openFood} choiceDrink={choiceDrink} />\n            </>\n          )}\n        </DialogContent>\n        <DialogFooter>\n          <ConfirmButton\n            onClick={isEdit ? editOrder : onHandleClick}\n            disabled={checkSection('Drinks') && !choiceDrink.choice}\n          >\n            {' '}\n            {isEdit ? 'Edit order: ' : 'Add to order: '}\n            {formatPrice(getTotalPrice(order))}\n          </ConfirmButton>\n        </DialogFooter>\n      </DialogContainer>\n    </>\n  );\n};\n\nexport const FoodDialog = props => {\n  if (!props.openFood) return null;\n\n  return <FoodDialogContainer {...props} />;\n};\n","import {useState} from 'react';\r\n\r\nexport const useChoice = defaultChoice => {\r\n  const [choice, setChoice] = useState(defaultChoice);\r\n\r\n  const onChange = e => setChoice(e.target.value);\r\n\r\n  return {\r\n    choice,\r\n    onChange,\r\n  };\r\n};\r\n","import styled from 'styled-components';\r\nimport {DialogContent, DialogFooter} from '../FoodDialog/foodDialog.style';\r\nimport {Title} from '../../Styles/title';\r\nimport {CustomButton} from '../../Styles/customButton';\r\n\r\nexport const OrderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 340px;\r\n  height: calc(100% - 48px);\r\n  position: fixed;\r\n  right: 0;\r\n  top: 48px;\r\n  z-index: 10;\r\n\r\n  background-color: aliceblue;\r\n  box-shadow: 4px 0 5px 4px grey;\r\n`;\r\n\r\nexport const OrderContent = styled(DialogContent)`\r\n  height: 100%;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const OrderItemContainer = styled.div`\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid grey;\r\n\r\n  ${({editable}) =>\r\n    editable\r\n      ? `\r\n  &:hover {\r\n    cursor: pointer;\r\n      background-color: #e7e7e7;\r\n  }`\r\n      : `\r\n  pointer-events: none; \r\n  `}\r\n`;\r\n\r\nexport const OrderItem = styled(Title)`\r\n  padding: 10px 0;\r\n  display: grid;\r\n  grid-template-columns: 33px 150px 20px 60px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Toppings = styled.div`\r\n  color: gray;\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const CheckoutButton = styled(CustomButton)``;\r\n\r\nexport const OrderFooter = styled(DialogFooter)``;\r\n","import React from 'react';\r\nimport {\r\n  OrderContainer,\r\n  OrderContent,\r\n  OrderFooter,\r\n  OrderItem,\r\n  OrderItemContainer,\r\n  Toppings,\r\n} from './order.style';\r\n\r\nimport {CheckoutButton} from './order.style';\r\nimport {formatPrice} from '../Menu/dataFood';\r\nimport {getTotalPrice} from '../FoodDialog/FoodDialog';\r\n\r\nconst Order = React.memo(({orders, setOrders, setOpenFood}) => {\r\n  const total = orders.reduce(\r\n    (total, order) => total + getTotalPrice(order),\r\n    0\r\n  );\r\n\r\n  const deleteOrder = index => {\r\n    const newOrder = orders.filter((_, i) => i !== index);\r\n    setOrders(newOrder);\r\n  };\r\n\r\n  return (\r\n    <OrderContainer>\r\n      {!orders.length ? (\r\n        <OrderContent>Your order is empty.</OrderContent>\r\n      ) : (\r\n        <OrderContent>\r\n          Your orders:\r\n          {orders.map((order, index) => (\r\n            <OrderItemContainer key={index} editable>\r\n              <OrderItem\r\n                onClick={() => {\r\n                  setOpenFood({...order, index});\r\n                }}\r\n              >\r\n                <div>\r\n                  <span>{order.quantity} &times;</span>\r\n                </div>\r\n                <div>{order.name === 'Drinks' ? order.choice : order.name}</div>\r\n                <div\r\n                  onClick={e => {\r\n                    e.stopPropagation();\r\n                    deleteOrder(index);\r\n                  }}\r\n                  style={{cursor: 'pointer'}}\r\n                >\r\n                  🗑\r\n                </div>\r\n                <div>{formatPrice(getTotalPrice(order))}</div>\r\n              </OrderItem>\r\n              <Toppings>\r\n                {order.toppings\r\n                  .filter(topping => topping.checked)\r\n                  .map(topping => topping.name)\r\n                  .join(', ')}\r\n              </Toppings>\r\n            </OrderItemContainer>\r\n          ))}\r\n          <OrderItemContainer>\r\n            <OrderItem>\r\n              <div />\r\n              <div>Total</div>\r\n              {formatPrice(total)}\r\n            </OrderItem>\r\n          </OrderItemContainer>\r\n        </OrderContent>\r\n      )}\r\n      <OrderFooter>\r\n        <CheckoutButton>Checkout</CheckoutButton>\r\n      </OrderFooter>\r\n    </OrderContainer>\r\n  );\r\n});\r\n\r\nexport default Order;\r\n","import {useState} from 'react';\r\n\r\nconst useOpenFood = () => {\r\n  const [openFood, setOpenFood] = useState();\r\n\r\n  return {\r\n    openFood,\r\n    setOpenFood,\r\n  };\r\n};\r\n\r\nexport default useOpenFood;\r\n","import {useState} from 'react';\r\n\r\nconst useOrder = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  return {\r\n    orders,\r\n    setOrders,\r\n  };\r\n};\r\n\r\nexport default useOrder;\r\n","import {useEffect} from 'react';\r\n\r\nconst useTitle = ({openFood}) => {\r\n  useEffect(() => {\r\n    if (openFood) {\r\n      document.title = openFood.name;\r\n    } else {\r\n      document.title = 'RockIt Pizza';\r\n    }\r\n  });\r\n};\r\n\r\nexport default useTitle;\r\n","import React from 'react';\n\nimport {GlobalStyle} from './Styles/globalStyle';\nimport Navbar from './Components/Navbar/Navbar';\nimport Banner from './Components/Banner/Banner';\nimport Menu from './Components/Menu/Menu';\nimport {FoodDialog} from './Components/FoodDialog/FoodDialog';\nimport Order from './Components/Order/Order';\nimport useOpenFood from './Hooks/useOpenFood';\nimport useOrder from './Hooks/useOrder';\nimport useTitle from './Hooks/useTitle';\n\nconst App = () => {\n  const openFood = useOpenFood();\n  const orders = useOrder();\n\n  useTitle(openFood);\n\n  return (\n    <>\n      <GlobalStyle />\n      <FoodDialog />\n      <Navbar />\n      <Banner />\n      <FoodDialog {...openFood} {...orders} />\n      <Menu {...openFood} />\n      <Order {...orders} {...openFood} />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}